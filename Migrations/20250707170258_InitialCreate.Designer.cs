// <auto-generated />
using System;
using Empresa;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace cabapi.Migrations
{
    [DbContext(typeof(CABDB))]
    [Migration("20250707170258_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("cabapi.Models.Clasificador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<decimal>("Latitud")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Longitud")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ZonaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZonaId");

                    b.ToTable("Clasificadores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FechaCreacion = new DateTime(2025, 7, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Latitud = 21.0635822m,
                            Longitud = -101.5803752m,
                            Nombre = "Entrada Principal",
                            ZonaId = 5
                        },
                        new
                        {
                            Id = 2,
                            FechaCreacion = new DateTime(2025, 7, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Latitud = 21.0636721m,
                            Longitud = -101.580911m,
                            Nombre = "Pasillo",
                            ZonaId = 5
                        },
                        new
                        {
                            Id = 3,
                            FechaCreacion = new DateTime(2025, 7, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Latitud = 21.0636795m,
                            Longitud = -101.5804751m,
                            Nombre = "Pasillo Superior",
                            ZonaId = 5
                        });
                });

            modelBuilder.Entity("cabapi.Models.Deteccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClasificadorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaHora")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClasificadorId");

                    b.ToTable("Detecciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClasificadorId = 1,
                            FechaHora = new DateTime(2025, 7, 6, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Tipo = "Organico"
                        },
                        new
                        {
                            Id = 2,
                            ClasificadorId = 2,
                            FechaHora = new DateTime(2025, 7, 6, 12, 15, 0, 0, DateTimeKind.Unspecified),
                            Tipo = "Valorizable"
                        },
                        new
                        {
                            Id = 3,
                            ClasificadorId = 3,
                            FechaHora = new DateTime(2025, 7, 6, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Tipo = "No Valorizanble"
                        });
                });

            modelBuilder.Entity("cabapi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Correo = "admin@utleon.edu.mx",
                            Nombre = "root",
                            Password = "XohImNooBHFR0OVvjcYpJ3NgPQ1qq73WKhHvch0VQtg="
                        });
                });

            modelBuilder.Entity("cabapi.Models.Zona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Zonas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Edificio A"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Edificio B"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Edificio C"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Edificio C Pesado"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Edificio D"
                        },
                        new
                        {
                            Id = 6,
                            Nombre = "Cafetería"
                        },
                        new
                        {
                            Id = 7,
                            Nombre = "Edificio CVD"
                        },
                        new
                        {
                            Id = 8,
                            Nombre = "Edificio F"
                        },
                        new
                        {
                            Id = 9,
                            Nombre = "Edificio de Rectoría"
                        },
                        new
                        {
                            Id = 10,
                            Nombre = "Almacén"
                        });
                });

            modelBuilder.Entity("cabapi.Models.Clasificador", b =>
                {
                    b.HasOne("cabapi.Models.Zona", "Zona")
                        .WithMany("Clasificadores")
                        .HasForeignKey("ZonaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zona");
                });

            modelBuilder.Entity("cabapi.Models.Deteccion", b =>
                {
                    b.HasOne("cabapi.Models.Clasificador", "Clasificador")
                        .WithMany("Detecciones")
                        .HasForeignKey("ClasificadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasificador");
                });

            modelBuilder.Entity("cabapi.Models.Clasificador", b =>
                {
                    b.Navigation("Detecciones");
                });

            modelBuilder.Entity("cabapi.Models.Zona", b =>
                {
                    b.Navigation("Clasificadores");
                });
#pragma warning restore 612, 618
        }
    }
}
